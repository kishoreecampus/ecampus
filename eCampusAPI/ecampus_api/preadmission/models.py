import uuid
from django.db import models
from master.models import ClassName, Caste
from django.core.validators import MinLengthValidator, MaxLengthValidator, RegexValidator
from student.models import Document

class Application(models.Model):
    application_token = models.CharField('Application token', editable=False, unique=True, max_length=250)
    docs = models.OneToOneField(Document, on_delete=models.PROTECT, null=True)
    first_name = models.CharField('First Name', validators=[MinLengthValidator(3), RegexValidator(regex='^[a-zA-Z ]*$')], max_length=60)
    last_name = models.CharField('Last Name', validators=[MinLengthValidator(3), RegexValidator(regex='^[a-zA-Z ]*$')], max_length=60)
    GENDER_CHOICES = (('male','Male'), ('female','Female'), ('other','Other'))
    gender = models.CharField('Gender', choices=GENDER_CHOICES, max_length=6)
    dob = models.DateField('Date of Birth')
    class_name = models.ForeignKey(ClassName, on_delete=models.PROTECT)
    nationality = models.CharField('Nationality', validators=[MinLengthValidator(3)], max_length=10)
    religion = models.CharField('Religion', validators=[MinLengthValidator(3)], max_length=25)
    caste = models.ForeignKey(Caste, on_delete=models.PROTECT)
    father_name =  models.CharField('Father name', validators=[MinLengthValidator(3), RegexValidator(regex='^[a-zA-Z ]*$')], max_length=60)
    father_mobile = models.CharField('Father Mobile Number', validators=[RegexValidator(regex='^[\d]{10,12}$')], max_length=12, null=True, blank=True)
    father_email = models.EmailField('Father Email Address', null=True, blank=True)
    father_qualification = models.CharField('Father Qualification', max_length=20, null=True, blank=True)
    father_occupation = models.CharField('Father Occupation', max_length=20, null=True, blank=True)
    father_annual_income = models.DecimalField('Father Annual Income', max_digits=10, decimal_places=2, null=True, blank=True)
    mother_name =  models.CharField('Mother name', validators=[MinLengthValidator(3), RegexValidator(regex='^[a-zA-Z ]*$')], max_length=60)
    mother_mobile = models.CharField('Mother Mobile Number', validators=[RegexValidator(regex='^[\d]{10,12}$')], max_length=12, null=True, blank=True)
    mother_email = models.EmailField('Mother Email Address', null=True, blank=True)
    mother_qualification = models.CharField('Mother Qualification', max_length=20, null=True, blank=True)
    mother_occupation = models.CharField('Mother Occupation', max_length=20, null=True, blank=True)
    mother_annual_income = models.DecimalField('Mother Annual Income', max_digits=10, decimal_places=2, null=True, blank=True)
    current_address = models.TextField('Current Address')
    permanent_address = models.TextField('Permanent Address', null=True, blank=True)
    guardian_name =  models.CharField('Guardian name', validators=[RegexValidator(regex='^[a-zA-Z ]*$')], max_length=60, null=True, blank=True)
    guardian_mobile = models.CharField('Guardian Mobile Number', validators=[RegexValidator(regex='^[\d]{10,12}$')], max_length=12, null=True, blank=True)
    guardian_email = models.EmailField('Guardian Email Address', null=True, blank=True)
    previous_school = models.CharField('Previous School Name', max_length=200, null=True, blank=True)
    primary_contact_person_choice = [('father','Father'),('mother','Mother'),('guardian','Guardian')]
    primary_contact_person = models.CharField(choices=primary_contact_person_choice, max_length=10)
    query = models.TextField("Query", max_length=2000, blank=True)
    is_verified = models.BooleanField('Is Verified', default=0)
    is_docs_verified = models.BooleanField('Is Docs Verified', default=0)
    is_applied = models.BooleanField('Is Applied', default=0)
    reference_number = models.CharField('Refrence Number', unique=True, max_length=50, null=True)
    created_by = models.IntegerField('Created By', default=0)
    created_on = models.DateTimeField(auto_now_add=True, null=True)
